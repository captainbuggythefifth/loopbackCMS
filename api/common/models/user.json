{
  "name": "user",
  "base": "User",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "mixins": {
    "TimeStamp": true
  },
  "scope": {
    "include": [
      "roles",
      "avatar"
    ]
  },
  "properties": {
    "firstName": {
      "type": "string"
    },
    "lastName": {
      "type": "string"
    }
  },
  "validations": [],
  "relations": {
    "roles": {
      "type": "hasMany",
      "model": "role",
      "foreignKey": "principalId",
      "through": "RoleMapping"
    },
    "media": {
      "type": "hasMany",
      "model": "media",
      "foreignKey": ""
    },
    "avatar": {
      "type": "hasOne",
      "model": "media_link",
      "polymorphic": {
        "foreignKey": "refId",
        "discriminator": "refType"
      },
      "through": "media_link"
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "administrator",
      "permission": "ALLOW",
      "property": "*"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": [
        "findOne"
      ]
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$owner",
      "permission": "ALLOW",
      "property": [
        "findById",
        "updateAttributes",
        "__get__media",
        "__get__avatar",
        "__create__avatar",
        "__update__avatar",
        "__destroy__avatar",
        "__get_posts",
        "__update_posts",
        "__destroy_posts"
      ]
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "ALLOW",
      "property": [
        "user_friends"
      ]
    }
  ],
  "methods": {
    "user_friends": {
      "accepts": [
        {
          "arg": "id",
          "type": "string",
          "required": true,
          "description": "User Id",
          "http": {
            "source": "path"
          }
        },
        {
          "arg": "limit",
          "type": "number",
          "required": false,
          "description": "Limit number of friends to show",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "skip",
          "type": "number",
          "required": false,
          "description": "Skip items",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "search",
          "type": "string",
          "required": false,
          "description": "search user's friend",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": [
        {
          "arg": "result",
          "type": "object",
          "root": true,
          "description": ""
        }
      ],
      "description": "Find User's Friend",
      "http": [
        {
          "path": "/:id/friends",
          "verb": "get"
        }
      ]
    }
  }
}
